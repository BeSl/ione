
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для каждого тПарам из Обработки.БотLLM.МетодыLLMСервера() Цикл
		
		НП = МетодыLLM.Добавить();
		НП.Наименование = тПарам.Наименование;
		НП.ТипЗапроса = тПарам.ТипЗапроса;
		НП.Путь = тПарам.Путь;

		
		//ЗаполнитьЗначенияСвойств(НП, тПарам);
		Для каждого тт из тПарам.Параметры Цикл
			ннп = НП.Параметры.Добавить();
			ннп.ИмяПараметра = тт.ИмяПараметра;
			ннп.Обязательный = тт.Обязательный;
		КонецЦикла;
			
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Спросить(Команда)
	СпроситьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СпроситьНаСервере()
	
	КонтекстЗапроса = Новый Структура;
	
	ПараметрыЗапроса = МетодыLLM.НайтиСтроки(Новый Структура("Путь", Метод));
	Для каждого тПар из ПараметрыЗапроса[0].Параметры Цикл    
		Если не ЗначениеЗаполнено(тПар.Значение) Тогда
			Продолжить;
		КонецЕсли;
		КонтекстЗапроса.Вставить(тПар.ИмяПараметра, тПар.Значение);	
	КонецЦикла;
	
	ОтветМодели = ВзаимодействиеСLLM.ОтправитьЗапросСерверу(ТипЗапроса, АдресСервера()+Метод, КонтекстЗапроса);
	ОтветТекст.ДобавитьСтроку(ОтветМодели);
	
	ИнфоОтвета = ПрочитатьЗначениеJSON(ОтветМодели);
	ДопОбработкаРезультатов(ИнфоОтвета);
	
КонецПроцедуры

&НаКлиенте
Процедура МетодыLLMПриАктивизацииСтроки(Элемент)
	Метод = Элементы.МетодыLLM.ТекущиеДанные.Путь;  
	ТипЗапроса = Элементы.МетодыLLM.ТекущиеДанные.ТипЗапроса;  
КонецПроцедуры

&НаСервере
Функция АдресСервера()
	
	Возврат Справочники.СерверыLLM.АдресСервераДляЗапросов(СерверLLM);
	
КонецФункции   

&НаСервере
Функция ДопОбработкаРезультатов(ОтветМодели)
	
	Если Метод = "/api/tags" Тогда  
		ЗаполнитьСписокМоделей(ОтветМодели);
	КонецЕсли;
	
КонецФункции

Процедура ЗагрузитьСписокМоделей()

	ТекМетод = "/api/tags";
    ТипЗапроса = "GET";
	
	ОтветМодели = ВзаимодействиеСLLM.ОтправитьЗапросСерверу(ТипЗапроса, АдресСервера() + ТекМетод, Неопределено);
	
	ЗаполнитьСписокМоделей(ПрочитатьЗначениеJSON(ОтветМодели));
	
	
КонецПроцедуры


Процедура ЗаполнитьСписокМоделей(ОтветМодели)

	ДоступныеМодели = Новый Массив;
	
	Для каждого ОписаниеМодели из ОтветМодели["models"] Цикл
		
		 ДоступныеМодели.Добавить(ОписаниеМодели["model"]);
		
	КонецЦикла;
	
	Элементы.МоделиСервера.СписокВыбора.Очистить();
	Элементы.МоделиСервера.СписокВыбора.ЗагрузитьЗначения(ДоступныеМодели); 
	
КонецПроцедуры


&НаСервере
Процедура СерверLLMПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(СерверLLM) Тогда
		
		ЗагрузитьСписокМоделей();	
			
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СерверLLMПриИзменении(Элемент)
	СерверLLMПриИзмененииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ВопросКМодели(Команда)
	ВопросКМоделиНаСервере();
КонецПроцедуры


&НаСервере
Процедура ВопросКМоделиНаСервере()
	
	МетодВопроса = "/api/generate"; 
	ТипЗапроса = "POST";
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("model", МоделиСервера);
	ПараметрыЗапроса.Вставить("prompt", ТекстВопроса); 
	ПараметрыЗапроса.Вставить("stream", Ложь);
	
	тек = ЗаписатьЗначениеJSON(ПараметрыЗапроса);
	ОтветМодели = ВзаимодействиеСLLM.ОтправитьЗапросСерверу(ТипЗапроса, АдресСервера() + МетодВопроса, тек);
	
	ОтветСтруктурой = ПрочитатьЗначениеJSON(ОтветМодели);
	ОтветТекст.ДобавитьСтроку(ОтветСтруктурой["response"]);
	
	
КонецПроцедуры

